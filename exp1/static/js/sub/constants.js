// CONSTANTS FOR EFFORT PROGRESS TASK

const subject_id = uniqueId; //unique id number generated by psiTurk
var condition = _.sample([0, 1]); // random condition; 0 == no progress; 1 == progress
var condition = 0

/* set constants */
const numpractrials = 20; // number of practice trials for task-switching (10 A cue, 10 B cue; 20 A+B)
const numpracblocks = 2; // number of practice blocks with freechoice included *(must be even)*
const numDSTpractrials = 10 // number of trials participants practice the portal task (will still abide by easy/hard rates)
const numtrials = 75; // number of trials in a block
const numblocks = 4; // number of blocks (number of demand selections)
const iti = 500; // time after response until next cue (in ms)
const progtime = 1500; // time for which the inter-block progress shows (the stars; in ms)
const resptime = 2500; //time to respond before timeout (in ms)
const fontsize = 100; // font size for cue and probe text (in px)
const choicekeys = ['l','r']; // keys that subjects can use to make portal choices
const trialkeys = ['e', 'i']; // keys that subjects can use to make responses with during trials
var hard_rate = 0.9 // switch rate when the task is difficult
var easy_rate = 1-hard_rate // switch rate when the task is easy
var nums2choose = [1,2,3,4,6,7,8,9]; // numbers to judge
var numcolors = ['green', 'orange']; // colors for rules

var easy = _.sample(['blue', 'purple']) // which portal has the easier task (easy_rate)
if(easy == 'blue'){var hard = 'purple'} else{var hard = 'blue'} // the opposite portal has the harder task (hard_rate)

jsPsych.data.addProperties({ // add random data to file
  subject: subject_id,
  condition: condition,
  easy_colour: easy
});

maketrials = function(switch_rate, n, col1, col2) { // function to make trial lists
  nt = n-1;
  nswitch = Math.round(switch_rate*nt);
  nrep = nt-nswitch;

  x = Array(nswitch).fill('switch');
  x = x.concat(Array(nrep).fill('repeat'));
  x = _.sample(x, nt); // shuffle everything up
  x = ['NA'].concat(x); // first trial is neither switch nor repeat

  colors = [];
  for (i in _.range(x.length)){
    if(x[i]=='NA'){

      colors= colors.concat( _.sample([col1, col2]));// first trial

    } else if(x[i]=='repeat') {
      colors= colors.concat(colors[i-1]);

    } else if(x[i] == 'switch') {
      if(colors[i-1]==col1){
        y = col2;
      } else {y = col1}

      colors = colors.concat(y);
    }
  }
  return(colors);
};

var colList = []; // stores block-to-block color list

var fs = {
	type: 'fullscreen', // setup fullscreen mode
  fullscreen_mode: true,
  on_start: function(){
    document.body.style.background = "grey"; // set background to grey
    document.querySelector('#jspsych-progressbar-container').style.display = 'none'; // hide progress bar right away
   }
};
